#BlueJ class context
comment0.target=Game
comment0.text=\r\n\ The\ Game\ class\ will\ manage\ the\ playing\ of\ a\ game\r\n\r\n\ @author\ Hongliang\ Tang\r\n\ @version\ 1.0\ (04.September.2019)\r\n
comment1.params=
comment1.target=Game()
comment10.params=
comment10.target=void\ enterToContinue()
comment10.text=\r\n\ This\ Method\ is\ mainly\ for\ user\ experience,\ so\ they\ can\ press\ enter\ to\ continue.\r\n
comment11.params=player
comment11.target=void\ startGameRounds(Player)
comment11.text=\r\n\ Method\ to\ start\ the\ rounds.\r\n\ @param\ player\ a\ object\ of\ the\ Player\ Class\r\n
comment12.params=player\ computer
comment12.target=void\ compareFinalRoundsWon(Player,\ Player)
comment12.text=\r\n\ Method\ to\ announce\ the\ final\ winner.\r\n\r\n\ @param\ player\ player\ object\ of\ the\ Player\ Class\r\n\ @param\ computer\ computer\ object\ of\ the\ Player\ Class\r\n
comment13.params=whoPlayFirst
comment13.target=void\ displayWhoPlayFirst(java.lang.String)
comment13.text=\r\n\ Method\ to\ display\ who\ goes\ first.\r\n\r\n\ @param\ whoPlayFirst\ a\ string\ tells\ the\ method\ who\ is\ the\ first\ player.\r\n
comment14.params=player\ computer
comment14.target=void\ matchStart(Player,\ Player)
comment14.text=\r\n\ Method\ for\ one\ match\ round,\ player\ and\ computer\ take\ turns\r\n\r\n\ @param\ player\ player\ object\ of\ the\ Player\ Class\r\n\ @param\ computer\ computer\ object\ of\ the\ Player\ Class\r\n
comment15.params=player\ computer
comment15.target=void\ updateRoundsWon(Player,\ Player)
comment15.text=\r\n\ Method\ to\ update\ the\ number\ of\ rounds\ won\ by\ each\ player\ after\ each\ match\ round.\r\n\r\n\ @param\ player\ player\ object\ of\ the\ Player\ Class\r\n\ @param\ computer\ computer\ object\ of\ the\ Player\ Class\r\n
comment16.params=player\ computer
comment16.target=void\ scoreBonus(Player,\ Player)
comment16.text=\r\n\ Method\ to\ deal\ with\ some\ score\ bonus\ occasions.\r\n\r\n\ @param\ player\ player\ object\ of\ the\ Player\ Class\r\n\ @param\ computer\ computer\ object\ of\ the\ Player\ Class\r\n
comment17.params=player\ comment\ identity
comment17.target=void\ scoreReduction(Player,\ java.lang.String,\ java.lang.String)
comment17.text=\r\n\ Method\ to\ deduct\ score\ at\ the\ each\ of\ each\ round\ if\ tile\ 5\ is\ not\ used.\r\n\ @param\ player\ player\ object\ of\ Player\ class.\r\n\ @param\ comment\ a\ string\ to\ pass\ in\ a\ comment\ to\ remind\ player\ they\ didn't\ choose\ tile\ 5\r\n\ @param\ identity\ a\ string\ to\ pass\ in\ identity(player/computer)\ to\ the\ output\r\n
comment18.params=gameTotal\ player
comment18.target=int\ playerTurn(int,\ Player)
comment18.text=\r\n\ Method\ to\ conduct\ a\ player\ turn\r\n\r\n\ @param\ gameTotal\ the\ game\ total\ value,\ an\ integer.\r\n\ @param\ player\ the\ player\ object\ of\ the\ Player\ Class\r\n\ @return\ gameTotal\r\n
comment19.params=computer\ gameTotal\ compturn\ player\ playturn
comment19.target=int\ computerTurn(Player,\ int,\ int,\ Player,\ int)
comment19.text=\r\n\ Method\ to\ decide\ the\ computer\ strategy\r\n\r\n\ @param\ computer\ computer\ object\ of\ the\ Player\ Class\r\n\ @param\ gameTotal\ game\ total\ value\r\n\ @return\ gameTotal\r\n
comment2.params=
comment2.target=void\ initiateGame()
comment2.text=\r\n\ Method\ to\ start\ the\ game\r\n
comment20.params=
comment20.target=int\ drawZeroOne()
comment20.text=\r\n\ This\ method\ return\ number\ 0\ or\ 1\ with\ equal\ chance.\r\n
comment21.params=
comment21.target=java.lang.String\ drawFirstPlayer()
comment21.text=\r\n\ This\ method\ decide\ who\ (player\ or\ computer)\ play\ first.\r\n
comment22.params=
comment22.target=int\ numOfRounds()
comment22.text=\r\n\ This\ Method\ store\ the\ number\ of\ rounds\ inputted\ by\ player,\ limit\ rounds\ to\ be\ greater\ than\ 0\ and\r\n\ less\ than\ 10\ inclusively.\r\n\r\n\ @return\ the\ number\ of\ rounds\ is\ going\ to\ be\ played.\r\n
comment23.params=maximumValue\ minimumValue
comment23.target=int\ randomNumberGenerator(int,\ int)
comment23.text=\r\n\ Method\ to\ generate\ random\ number\ with\ discretion\r\n\ @param\ maximumValue\ maximum\ limit\ integer\r\n\ @param\ minimumValue\ minimum\ limit\ integer\r\n\ @return\ an\ integer\ number\ randomly\ generated\r\n
comment3.params=
comment3.target=void\ displayMenu()
comment3.text=\r\n\ This\ Method\ will\ display\ selection\ menu\ to\ player\r\n
comment4.params=displayMessage
comment4.target=int\ acceptIntegerInput(java.lang.String)
comment4.text=\r\n\ Method\ which\ displays\ a\ message\ to\ the\ user\ to\ enter\ an\ INTEGER\ input\r\n\ which\ is\ read\ from\ the\ keyboard\ using\ the\ Scanner\ object\ and\ then\ passed\r\n\ to\ the\ calling\ method\r\n\ (from\ my\ tutorial\ code)\r\n\r\n\ @param\ displayMessage\ A\ string\ message\ telling\ the\ user\ what\ input\ is\ expected\r\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ A\ single\ integer\ value\ which\ is\ entered\ by\ the\ user\r\n
comment5.params=option\ player
comment5.target=boolean\ playerSelectionResponder(int,\ Player)
comment5.text=\r\n\ This\ Method\ acts\ as\ a\ Responder\ to\ player's\ choice\ on\ a\ certain\ option,\r\n\ it\ is\ used\ to\ support\ the\ Method\ startGame()\ to\ perform\ interaction\ with\ player.\r\n\r\n\ @param\ option\ the\ options\ player\ choose\ to\ select\ from\ game\ menu\r\n\ @param\ player\ the\ player\ object\ from\ Player\ Class\r\n
comment6.params=
comment6.target=void\ menuHelper()
comment6.text=\r\n\ Method\ to\ display\ the\ help\ menu.\r\n
comment7.params=player
comment7.target=void\ registerPlayerName(Player)
comment7.text=\r\n\ This\ Method\ is\ to\ register\ the\ player\ name\ with\ length\ between\ 3\ to\ 10\ characters.\r\n\r\n\ @param\ player\ the\ player\ object\ in\ the\ Player\ Class\r\n
comment8.params=displayMessage
comment8.target=java.lang.String\ acceptStringInput(java.lang.String)
comment8.text=\r\n\ Method\ which\ displays\ a\ message\ to\ the\ user\ to\ enter\ a\ STRING\ input\r\n\ which\ is\ read\ from\ the\ keyboard\ using\ the\ Scanner\ object\ and\ then\ passed\r\n\ to\ the\ calling\ method\r\n\ (from\ my\ tutorial\ code)\r\n\r\n\ @param\ displayMessage\ A\ string\ message\ telling\ the\ user\ what\ input\ is\ expected\r\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ A\ single\ string\ object\ which\ is\ entered\ by\ the\ user\r\n
comment9.params=value\ min\ max
comment9.target=boolean\ stringLengthWithinRange(java.lang.String,\ int,\ int)
comment9.text=\r\n\ Method\ to\ check\ if\ the\ string\ length\ is\ between\ a\ range\r\n\ (from\ my\ tutorial\ code)\r\n
numComments=24
